trigger: none
pr: none

jobs:
    - job: 'manylinux1'
      pool:
          vmImage: 'ubuntu-16.04'
      container: 'pyca/cryptography-manylinux1:x86_64'
      strategy:
          matrix:
              Python27m:
                  PYTHON_VERSION: 'cp27-cp27m'
              Python27mu:
                  PYTHON_VERSION: 'cp27-cp27mu'
              Python3m:
                  PYTHON_VERSION: 'cp35-cp35m'
      steps:
          - script: /opt/python/$PYTHON_VERSION/bin/python -m virtualenv .venv
            displayName: Create virtualenv
          - script: .venv/bin/pip install -U pip==10.0.1
            displayName: Downgrade pip lol
          - script: .venv/bin/pip install cffi six
            displayName: Install our Python dependencies
          - script: |
              set -e
              set -x

              REGEX="cp3([0-9])*"
              if [[ "$PYTHON_VERSION" =~ $REGEX ]]; then
                  PY_LIMITED_API="--build-option --py-limited-api=cp3${BASH_REMATCH[1]}"
              fi
              .venv/bin/pip wheel bcrypt --no-binary bcrypt --no-deps --wheel-dir=tmpwheelhouse $PY_LIMITED_API
            displayName: Build the wheel
          - script: auditwheel repair tmpwheelhouse/bcrypt*.whl -w wheelhouse/
            displayName: Run auditwheel
          - script: .venv/bin/pip install bcrypt --no-index -f wheelhouse/
            displayName: Test installing the wheel
          - script: |
              .venv/bin/python -c "import bcrypt;password = b'super secret password';hashed = bcrypt.hashpw(password, bcrypt.gensalt());bcrypt.checkpw(password, hashed)"
            displayName: Test the installed wheel
          - task: PublishBuildArtifacts@1
            inputs:
                pathToPublish: wheelhouse/
                artifactName: bcrypt-manylinux1-$(PYTHON_VERSION)
